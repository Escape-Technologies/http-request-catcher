name: CD

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    name: Release
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
  
      - name: Set up Go
        uses: actions/setup-go@v2
        with: 
          go-version: 1.18

      - name: Create release on GitHub
        uses: goreleaser/goreleaser-action@v2
        with:
          args: "release --rm-dist"
          version: latest
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  docker-push:
    name: Docker Push
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: true
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.DOCKERHUB_REPO}}/http-request-catcher
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy
    runs-on: ubuntu-20.04
    needs: docker-push
    steps:
      - name: Trigger deployment
        run: 'curl ${{ secrets.DEPLOYMENT_URL }} -X POST -H "Authorization: ${{ secrets.DEPLOYMENT_SECRET }}"'
